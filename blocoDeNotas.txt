9dia 26-09
Classe Cliente: criação do método construtor, buscarCliente.
Classe GerenciaCliente: criação do método gerarCodigo, buscarClientePorCodigo.
Classe GerenciaVeiculos: criação do método buscarVeiculoPorPlaca.
Classe Main: ordem dos arrayList.
Classe GerenciaAgenda: criação do método agendar.

--------------------------
dia 27-09
Classe GerenciaAgenda: criação do método cancelar, relatorioVeiculosAgendados.
Classe GerenciaCliente: correções no gerarCodigo.
Classe GerarCodigo: criação da classe e método statico getProximoCodigo.

--------------------------
dia 28-09
Classe GerenciaVeiculos: criação do método listarVeiculo
Classe GerenciaAgenda: correções no método agendar, implementação do método cancelar, melhorias no método relatorioVeiculosAgendados.

--------------------------
dia 29-09
Classe GerenciaAgenda: correções no código, implementação do método alterar, listarNumerado e imprimirNumerado.

--------------------------
dia 30-09
Classe GerenciaAgenda: implementação do método locar.

--------------------------
dia 02-10
Classe GerenciaAgenda: implementação do método relatorioVeiculosLocadosEmDia e relatorioVeiculosLocadosEmAtraso.

--------------------------
dia 05-10
Classe GerenciaAgenda: melhorias e correções em todos os métodos.

Classe GerenciaCaixa: implementação do subMenu.


double Preco=1000, Juros=10, parc,total=0;
        int aux, diasDeAtraso=5;
        
        for(aux=1; aux <= diasDeAtraso; aux++){
            parc = calcularJuros(aux, Preco, Juros);
            total += parc;
            System.out.println("parcela: R$"+parc);
        }
        
        System.out.println("Total "+total);
    }
    public static double calcularJuros(int dias, double preco, double juros){
        double tot = 0;
        tot = preco * Math.pow(1 + juros/100, dias);
        return  tot;
    }
